<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.kmakker</groupId>
    <artifactId>ibor-server</artifactId>
    <version>1.0.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.5</version>
        <relativePath/>
    </parent>

    <properties>
        <java.version>21</java.version>
        <jooq.version>3.18.7</jooq.version>
        <postgres.version>42.7.4</postgres.version>
        <lombok.version>1.18.34</lombok.version>
    </properties>

    <!-- Keep Testcontainers modules in sync via BOM -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>1.20.4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>

        <!-- DB -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.version}</version>
        </dependency>
        <!-- Remove direct jOOQ dependency; starter manages it
        <dependency>
          <groupId>org.jooq</groupId>
          <artifactId>jooq</artifactId>
          <version>${jooq.version}</version>
        </dependency>
        -->

        <!-- H2 only for unit tests (optional; can remove if not used) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.8.8</version>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- LangChain/OpenAI -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Testcontainers (versions come from BOM above) -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Lombok annotation processing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Surefire (unit tests) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.1</version>
            </plugin>

            <!-- Failsafe (integration tests) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- jOOQ codegen profile -->
    <profiles>
        <profile>
            <id>codegen</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <version>${jooq.version}</version>
                        <executions>
                            <execution>
                                <id>generate-ibor-schema</id>
                                <phase>generate-sources</phase>
                                <goals><goal>generate</goal></goals>
                                <configuration>
                                    <jdbc>
                                        <driver>org.postgresql.Driver</driver>
                                        <url>jdbc:postgresql://localhost:5432/ibor</url>
                                        <user>ibor</user>
                                        <password>ibor</password>
                                    </jdbc>
                                    <generator>
                                        <name>org.jooq.codegen.DefaultGenerator</name>
                                        <database>
                                            <name>org.jooq.meta.postgres.PostgresDatabase</name>
                                            <inputSchema>ibor</inputSchema>
                                            <includes>.*</includes>
                                            <forcedTypes>
                                                <forcedType>
                                                    <name>INSTANT</name>
                                                    <types>^TIMESTAMP WITH TIME ZONE$</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>LOCALDATE</name>
                                                    <types>^DATE$</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>VARCHAR</name>
                                                    <types>^JSONB$</types>
                                                </forcedType>
                                                <forcedType>
                                                    <name>VARCHAR</name>
                                                    <userType>java.lang.String</userType>
                                                    <types>^VECTOR$</types>
                                                </forcedType>
                                            </forcedTypes>
                                        </database>
                                        <generate>
                                            <pojos>true</pojos>
                                            <records>true</records>
                                            <daos>false</daos>
                                            <javaTimeTypes>true</javaTimeTypes>
                                            <relations>true</relations>
                                            <immutablePojos>true</immutablePojos>
                                        </generate>
                                        <target>
                                            <packageName>com.kmakker.ibor.jooq</packageName>
                                            <directory>${project.build.directory}/generated-sources/jooq</directory>
                                        </target>
                                    </generator>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>